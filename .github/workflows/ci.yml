name: CI

on:
  push:
    branches: [ main, master ]
    paths:
      - 'schemas/**'
      - 'openapi/**'
      - 'ui/**'
      - 'examples/**'
      - 'src/connectors/**'
      - 'tests/connectors/**'
      - 'docs/**'
      - 'mkdocs.yml'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'schemas/**'
      - 'openapi/**'
      - 'ui/**'
      - 'examples/**'
      - 'src/connectors/**'
      - 'tests/connectors/**'
      - 'docs/**'
      - 'mkdocs.yml'
      - '.github/workflows/**'

permissions:
  contents: read

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      contracts: ${{ steps.filter.outputs.contracts }}
      web: ${{ steps.filter.outputs.web }}
      connectors: ${{ steps.filter.outputs.connectors }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            contracts:
              - 'schemas/**'
              - 'openapi/**'
            web:
              - 'ui/**'
            connectors:
              - 'examples/**'
              - 'src/connectors/**'
              - 'tests/connectors/**'
            docs:
              - 'docs/**'
              - 'mkdocs.yml'

  contracts:
    needs: changes
    if: ${{ needs.changes.outputs.contracts == 'true' }}
    runs-on: ubuntu-latest
    concurrency:
      group: contracts-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - run: pnpm install --frozen-lockfile
      - run: pnpm run lint:oas
      - run: pnpm run schema:validate

  web:
    needs: changes
    if: ${{ needs.changes.outputs.web == 'true' }}
    runs-on: ubuntu-latest
    concurrency:
      group: web-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - run: pnpm install --frozen-lockfile
      - run: pnpm --filter ui build --if-present
      - run: pnpm --filter ui test --if-present

  connectors:
    needs: changes
    if: ${{ needs.changes.outputs.connectors == 'true' }}
    runs-on: ubuntu-latest
    concurrency:
      group: connectors-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - run: python -m pip install -U pip
      - run: pip install -r requirements.txt
      - run: pytest tests/connectors -q

  docs:
    needs: changes
    if: ${{ needs.changes.outputs.docs == 'true' }}
    runs-on: ubuntu-latest
    concurrency:
      group: docs-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - run: pnpm install --frozen-lockfile
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - run: python -m pip install -U pip
      - run: pip install -r requirements.txt
      - run: mkdocs build --strict
