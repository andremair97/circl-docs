name: CI (Docs, Specs, Schemas)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps (Node)
        run: npm ci

      - name: Install deps (Python)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ---------- Docs build ----------
      - name: Build MkDocs (strict)
        run: mkdocs build --strict

      # ---------- Linters ----------
      - name: Lint Markdown
        run: |
          # docs/ contains legacy files; ignore until formatted
          npx markdownlint "**/*.md" \
            --ignore "node_modules" \
            --ignore "site" \
            --ignore ".venv" \
            --ignore "docs" \
            --ignore "000-template.md" \
            || (echo "Run: npx markdownlint --fix to auto-fix some issues" && exit 1)

      - name: Lint YAML
        run: |
          FILES="$(git ls-files '*.yml' '*.yaml' | grep -v '^node_modules/' | grep -v '^site/' || true)"
          [ -z "$FILES" ] || yamllint -s -c .yamllint.yaml $FILES

      # ---------- OpenAPI validation ----------
      - name: Spectral lint (OpenAPI 3.1)
        run: npm run lint:oas

      # ---------- JSON Schema validation ----------
      - name: Validate against schemas (ajv)
        run: npm run schema:validate

      - name: Run tests
        run: pytest -q

